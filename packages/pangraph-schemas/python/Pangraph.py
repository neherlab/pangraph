# generated by datamodel-codegen:
#   filename:  Pangraph.schema.json
#   timestamp: 2024-10-14T13:40:33+00:00

from __future__ import annotations

from dataclasses import dataclass
from typing import Dict, List, Literal, Optional

PathId = int


NodeId = int


BlockId = int


@dataclass
class Sub:
    pos: int
    alt: str


@dataclass
class Del:
    pos: int
    len: int


@dataclass
class Ins:
    pos: int
    seq: str


Strand = Literal['+', '-']


@dataclass
class PangraphPath:
    id: PathId
    nodes: List[NodeId]
    tot_len: int
    circular: bool
    name: Optional[str] = None


@dataclass
class Edit:
    subs: List[Sub]
    dels: List[Del]
    inss: List[Ins]


@dataclass
class PangraphNode:
    id: NodeId
    block_id: BlockId
    path_id: PathId
    strand: Strand
    position: List


@dataclass
class PangraphBlock:
    id: BlockId
    consensus: str
    alignments: Dict[str, Edit]


@dataclass
class Pangraph:
    paths: Dict[str, PangraphPath]
    blocks: Dict[str, PangraphBlock]
    nodes: Dict[str, PangraphNode]


@dataclass
class FieldPangraphSchemaRoot:
    pangraph: Pangraph
